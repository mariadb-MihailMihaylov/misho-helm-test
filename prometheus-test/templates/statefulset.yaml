{{- range $env, $regions := .Values.cloud }}
{{- if or (eq $env $.Values.env) (eq $.Values.env "all") }}
{{- range $region, $scope := $regions }}
{{- if or (eq $region $.Values.region) (eq $.Values.region "all") }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "prometheus-test.name" $ }}
  labels:
    {{- include "prometheus-test.labels" $ | nindent 4 }}
  {{- with default $.Values.default.ingress.annotations ( $scope.ingress ).annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  serviceName: "prometheus"
  replicas: {{ default $.Values.default.replicaCount $scope.replicaCount }}
  selector:
    matchLabels:
      {{- include "prometheus-test.selectorLabels" $ | nindent 6 }}
  template:
    metadata:
      labels:
      {{- include "prometheus-test.labels" $ | nindent 8 }}
        {{- with default $.Values.default.ingress.annotations ( $scope.ingress ).annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
    spec:
      {{- if default $.Values.default.serviceAccount.create ( $scope.serviceAccount ).create }}
      serviceAccountName: {{ template "prometheus-test.fullname" $ }}
      {{- end }}
        #initContainers:
        #- name: "init-chown-data"
        #  image: $IMAGE_PROMETHEUS_INIT
        #  imagePullPolicy: Always
        #  command: ["chown", "-R", "65534:65534", "/data"]
        #  volumeMounts:
        #  - name: $APP_INSTANCE_NAME-prometheus-data
        #    mountPath: /data
        #    subPath: ""
      containers:
        - name: prometheus-server
          image: prom/prometheus:v2.33.4
          args:
            - --config.file=/etc/config/prometheus.yaml
            - --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
            requests:
              cpu: 200m
              memory: 1000Mi
                #    volumeMounts:
                #      - name: config-volume
                #        mountPath: /etc/config
                #volumes:
                #  - name: config-volume
                #    configMap:
                #      name: $APP_INSTANCE_NAME-prometheus-config
{{- end }}
{{- end }}
{{- end }}
{{- end }}
